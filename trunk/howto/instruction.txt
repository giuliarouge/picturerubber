==============
 installation
==============

1) get hands on a kinect device
2) Install OpenNi unstable from http://www.openni.org/downloadfiles/openni-binaries/latest-unstable/25-openni-unstable-build-for-windows-v1-0-0/download
3) Install modified(!) Kinect Sensor Plugin [this was why there was a black screen] from https://github.com/avin2/SensorKinect/blob/unstable/Bin/SensorKinect-Win32-5.0.0.exe
4) Install NITE from http://www.openni.org/downloadfiles/openni-compliant-middleware-binaries/stable/55-primesense-nite-beta-build-for-windows-v1-3-0/download
Use Key: 0KOIk2JeIBYClPWVnMoRKn5cdY4=
5) Restart!

NOTE: Modified kinect sensor Plugin needs OpenNi unstable to Work!

dont know if these two are mandatory
5) copy XML Files from ...\Prime Sense\Sensor\SampleXMLs\NITE\Data to ...\Prime Sense\NITE
\Data
6) copy XML Files from ...\Prime Sense\Sensor\SampleXMLs\OPENNI\Data to ...\OpenNI\Data

==============================
 setting up a working project
==============================

1) create a folder named "data" within your project
2) add one of the existing xml-files from any sample and rename it to "openni.xml"
3) enter the prime sense key for the "key" attribute of the "license" node
4) if you created an XNA 4.0 Project, create (if not existing) an xml-file named App.config with the following content:

+- App.config -----------------------------------------------
|    <?xml version="1.0" encoding="utf-8" ?>
|    <configuration>
|      <startup useLegacyV2RuntimeActivationPolicy="true">
|        <supportedRuntime version="v4.0"/>
|      </startup>
|    </configuration>
+------------------------------------------------------------

   This tells xna to use the managednite.dll even if it was compiled for XNA 3.1 / .NET 3.5 Framework

5) Have fun!